{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/RATH0521/Workspace/next-crud/frontend/app/components/ContactForm.tsx"],"sourcesContent":["// components/ContactForm.tsx\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Contact } from '../page';\r\n\r\ninterface ContactFormProps {\r\n  getContacts: () => void;\r\n  editingContact: Contact | null;\r\n  setEditingContact: (contact: Contact | null) => void;\r\n}\r\n\r\nconst ContactForm: React.FC<ContactFormProps> = ({ getContacts, editingContact, setEditingContact }) => {\r\n  const [name, setName] = useState<string>('');\r\n  const [mobile, setMobile] = useState<string>('');\r\n  const [email, setEmail] = useState<string>('');\r\n\r\n  useEffect(() => {\r\n    if (editingContact) {\r\n      setName(editingContact.name);\r\n      setMobile(editingContact.mobile);\r\n      setEmail(editingContact.email);\r\n    } else {\r\n      setName('');\r\n      setMobile('');\r\n      setEmail('');\r\n    }\r\n  }, [editingContact]);\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    const newContact = { name, mobile, email };\r\n\r\n    if (editingContact) {\r\n      await fetch(`http://localhost:5000/contacts/${editingContact.id}`, {\r\n        method: 'PUT',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(newContact),\r\n      });\r\n      setEditingContact(null);\r\n    } else {\r\n      await fetch('http://localhost:5000/contacts', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(newContact),\r\n      });\r\n    }\r\n\r\n    setName('');\r\n    setMobile('');\r\n    setEmail('');\r\n    getContacts();\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input\r\n        type=\"text\"\r\n        value={name}\r\n        onChange={(e) => setName(e.target.value)}\r\n        placeholder=\"Name\"\r\n        required\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        value={mobile}\r\n        onChange={(e) => setMobile(e.target.value)}\r\n        placeholder=\"Mobile\"\r\n        required\r\n      />\r\n      <input\r\n        type=\"email\"\r\n        value={email}\r\n        onChange={(e) => setEmail(e.target.value)}\r\n        placeholder=\"Email\"\r\n        required\r\n      />\r\n      <button type=\"submit\">\r\n        {editingContact ? 'Update Contact' : 'Add Contact'}\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ContactForm;\r\n"],"names":[],"mappings":"AAAA,6BAA6B;;;;;AAC7B;;;AASA,MAAM,cAA0C,CAAC,EAAE,WAAW,EAAE,cAAc,EAAE,iBAAiB,EAAE;IACjG,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAU;IACzC,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAU;IAC7C,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAU;IAE3C,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,gBAAgB;YAClB,QAAQ,eAAe,IAAI;YAC3B,UAAU,eAAe,MAAM;YAC/B,SAAS,eAAe,KAAK;QAC/B,OAAO;YACL,QAAQ;YACR,UAAU;YACV,SAAS;QACX;IACF,GAAG;QAAC;KAAe;IAEnB,MAAM,eAAe,OAAO;QAC1B,EAAE,cAAc;QAChB,MAAM,aAAa;YAAE;YAAM;YAAQ;QAAM;QAEzC,IAAI,gBAAgB;YAClB,MAAM,MAAM,CAAC,+BAA+B,EAAE,eAAe,EAAE,EAAE,EAAE;gBACjE,QAAQ;gBACR,SAAS;oBAAE,gBAAgB;gBAAmB;gBAC9C,MAAM,KAAK,SAAS,CAAC;YACvB;YACA,kBAAkB;QACpB,OAAO;YACL,MAAM,MAAM,kCAAkC;gBAC5C,QAAQ;gBACR,SAAS;oBAAE,gBAAgB;gBAAmB;gBAC9C,MAAM,KAAK,SAAS,CAAC;YACvB;QACF;QAEA,QAAQ;QACR,UAAU;QACV,SAAS;QACT;IACF;IAEA,qBACE,8OAAC;QAAK,UAAU;;0BACd,8OAAC;gBACC,MAAK;gBACL,OAAO;gBACP,UAAU,CAAC,IAAM,QAAQ,EAAE,MAAM,CAAC,KAAK;gBACvC,aAAY;gBACZ,QAAQ;;;;;;0BAEV,8OAAC;gBACC,MAAK;gBACL,OAAO;gBACP,UAAU,CAAC,IAAM,UAAU,EAAE,MAAM,CAAC,KAAK;gBACzC,aAAY;gBACZ,QAAQ;;;;;;0BAEV,8OAAC;gBACC,MAAK;gBACL,OAAO;gBACP,UAAU,CAAC,IAAM,SAAS,EAAE,MAAM,CAAC,KAAK;gBACxC,aAAY;gBACZ,QAAQ;;;;;;0BAEV,8OAAC;gBAAO,MAAK;0BACV,iBAAiB,mBAAmB;;;;;;;;;;;;AAI7C;uCAEe"}},
    {"offset": {"line": 114, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 120, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/RATH0521/Workspace/next-crud/frontend/app/components/ContactList.tsx"],"sourcesContent":["// components/ContactList.tsx\r\nimport React from 'react';\r\nimport { Contact } from '../page';\r\n\r\ninterface ContactListProps {\r\n  contacts: Contact[];\r\n  getContacts: () => void;\r\n  handleEditContact: (contact: Contact) => void;\r\n}\r\n\r\nconst ContactList: React.FC<ContactListProps> = ({ contacts, handleEditContact }) => {\r\n  return (\r\n    <ul>\r\n      {contacts.map((contact) => (\r\n        <li key={contact.id}>\r\n          <span>{contact.name}</span> - <span>{contact.mobile}</span> - <span>{contact.email}</span>\r\n          <button onClick={() => handleEditContact(contact)}>Edit</button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ContactList;\r\n"],"names":[],"mappings":"AAAA,6BAA6B;;;;;;AAU7B,MAAM,cAA0C,CAAC,EAAE,QAAQ,EAAE,iBAAiB,EAAE;IAC9E,qBACE,8OAAC;kBACE,SAAS,GAAG,CAAC,CAAC,wBACb,8OAAC;;kCACC,8OAAC;kCAAM,QAAQ,IAAI;;;;;;oBAAQ;kCAAG,8OAAC;kCAAM,QAAQ,MAAM;;;;;;oBAAQ;kCAAG,8OAAC;kCAAM,QAAQ,KAAK;;;;;;kCAClF,8OAAC;wBAAO,SAAS,IAAM,kBAAkB;kCAAU;;;;;;;eAF5C,QAAQ,EAAE;;;;;;;;;;AAO3B;uCAEe"}},
    {"offset": {"line": 174, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 180, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/RATH0521/Workspace/next-crud/frontend/app/page.tsx"],"sourcesContent":["// pages/index.tsx\nimport React, { useState, useEffect } from 'react';\nimport ContactForm from './components/ContactForm';\nimport ContactList from './components/ContactList';\n\n\nexport interface Contact {\n  id: number;\n  name: string;\n  mobile: string;\n  email: string;\n}\n\nconst Home: React.FC = () => {\n  const [contacts, setContacts] = useState<Contact[]>([]);\n  const [editingContact, setEditingContact] = useState<Contact | null>(null);\n\n  // Fetch contacts from the backend\n  const getContacts = async () => {\n    const response = await fetch('http://localhost:5000/contacts');\n    const data = await response.json();\n    setContacts(data);\n  };\n\n  useEffect(() => {\n    getContacts();\n  }, []);\n\n  // Pass the selected contact for editing\n  const handleEditContact = (contact: Contact) => {\n    setEditingContact(contact);\n  };\n\n  return (\n    <div>\n      <h1>Contact List</h1>\n      <ContactForm\n        getContacts={getContacts} \n        editingContact={editingContact} \n        setEditingContact={setEditingContact} \n      />\n      <ContactList\n        contacts={contacts} \n        getContacts={getContacts} \n        handleEditContact={handleEditContact} \n      />\n    </div>\n  );\n};\n\nexport default Home;\n"],"names":[],"mappings":"AAAA,kBAAkB;;;;;AAClB;AACA;AACA;;;;;AAUA,MAAM,OAAiB;IACrB,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAa,EAAE;IACtD,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAkB;IAErE,kCAAkC;IAClC,MAAM,cAAc;QAClB,MAAM,WAAW,MAAM,MAAM;QAC7B,MAAM,OAAO,MAAM,SAAS,IAAI;QAChC,YAAY;IACd;IAEA,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR;IACF,GAAG,EAAE;IAEL,wCAAwC;IACxC,MAAM,oBAAoB,CAAC;QACzB,kBAAkB;IACpB;IAEA,qBACE,8OAAC;;0BACC,8OAAC;0BAAG;;;;;;0BACJ,8OAAC,iIAAA,CAAA,UAAW;gBACV,aAAa;gBACb,gBAAgB;gBAChB,mBAAmB;;;;;;0BAErB,8OAAC,iIAAA,CAAA,UAAW;gBACV,UAAU;gBACV,aAAa;gBACb,mBAAmB;;;;;;;;;;;;AAI3B;uCAEe"}},
    {"offset": {"line": 243, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 254, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 254, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 260, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/RATH0521/Workspace/next-crud/frontend/node_modules/next/dist/src/build/templates/app-page.ts"],"sourcesContent":["import type { LoaderTree } from '../../server/lib/app-dir-module'\nimport { AppPageRouteModule } from '../../server/route-modules/app-page/module.compiled' with { 'turbopack-transition': 'next-ssr' }\nimport { RouteKind } from '../../server/route-kind'\n\n// These are injected by the loader afterwards.\n\n/**\n * The tree created in next-app-loader that holds component segments and modules\n * and I've updated it.\n */\ndeclare const tree: LoaderTree\ndeclare const pages: any\n\n// We inject the tree and pages here so that we can use them in the route\n// module.\n// INJECT:tree\n// INJECT:pages\n\nexport { tree, pages }\n\nexport { default as GlobalError } from 'VAR_MODULE_GLOBAL_ERROR'\n\n// These are injected by the loader afterwards.\ndeclare const __next_app_require__: any\ndeclare const __next_app_load_chunk__: any\n\n// INJECT:__next_app_require__\n// INJECT:__next_app_load_chunk__\n\nexport const __next_app__ = {\n  require: __next_app_require__,\n  loadChunk: __next_app_load_chunk__,\n}\n\nexport * from '../../server/app-render/entry-base'\n\n// Create and export the route module that will be consumed.\nexport const routeModule = new AppPageRouteModule({\n  definition: {\n    kind: RouteKind.APP_PAGE,\n    page: 'VAR_DEFINITION_PAGE',\n    pathname: 'VAR_DEFINITION_PATHNAME',\n    // The following aren't used in production.\n    bundlePath: '',\n    filename: '',\n    appPaths: [],\n  },\n  userland: {\n    loaderTree: tree,\n  },\n})\n"],"names":["AppPageRouteModule","RouteKind","tree","pages","default","GlobalError","__next_app__","require","__next_app_require__","loadChunk","__next_app_load_chunk__","routeModule","definition","kind","APP_PAGE","page","pathname","bundlePath","filename","appPaths","userland","loaderTree"],"mappings":";;;;;;AA0BA,8BAA8B;AAzB9B,SAASA,kBAAkB,QAAQ,2DAA2D;IAAE,wBAAwB;AAAW,EAAC;AAYpI,yEAAyE;AAEzE,cAAc;AAGd,SAASE,IAAI,EAAEC,KAAK,GAAE;AAWtB,OAAO,MAAMG,eAAe;AAG5B,EAAC;;;;;;;;;;AAED,cAAc,qCAAoC,sBAAA;AAElD,UAAA,kDAA4D;AAC5D,MAAA,CAAO,MAAMK;IAAAA;IAAAA,SAAc,IAAIX,mBAAmB;YAChDY,QAAAA;YAAAA,GAAY;YAAA;iBACVC,MAAMZ,UAAUa,QAAQ;sBACxBC,IAAAA,CAAM,CAAA;gBAAA,QAAA;oBAAA,IAAA;oBAAA;iBAAA;;eACNC,UAAU;;SACV,2CAA2C;cAC3CC,IAAAA;YAAAA,GAAY,GAAA;iBACZC,MAAAA,IAAU,IAAA;wBAAA;4BACVC,KAAAA,CAAAA,GAAAA,2KAAAA,CAAAA,KAAU,EAAE,eAAA,EAAA,MAAA,MAAA,MAAA,EAAA,iBAAA,CAAA,CAAA,EAAA,mSAAA,CAAA,UAAA,CAAA,GAAA,CAAA,KAAA,CAAA,KAAA,MAAA,CAAA,CAAA,EAAA,CAAA,EAAA,EAAA;4BACd,OAAA,GAAA,mSAAA,CAAA,UAAA,CAAA,KAAA,CAAA,CAAA,EAAA,mSAAA,CAAA,UAAA,CAAA,MAAA,EAAA;4BACAC,MAAU,CAAA,YAAA,CAAA;;qBACRC,YAAYnB;aACd;QACF,CAAE;QAAA,UAAA;YAAA,IAAA;YAAA;SAAA","ignoreList":[0]}},
    {"offset": {"line": 357, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}